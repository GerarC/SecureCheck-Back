plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.springdoc.openapi-gradle-plugin" version "1.9.0"
	id "org.sonarqube" version "4.4.1.3373"
	id 'jacoco'
}

group = 'co.edu.udea'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.6.0'

	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.6.0'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.3.3'
	implementation group: 'org.springframework.security', name: 'spring-security-web', version: '6.3.3'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.3.3'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'
}

tasks.named('test') {
	useJUnitPlatform()
}

def jacocoExclude = [
		'**/configuration/**/*.class',
		'**/generated/**',
		'**/model/*.class',
		'**/entity/*.class',
		'**/utils/Constant.class',
		'**/dto/*.class',
]

test {
	finalizedBy jacocoTestReport
}


jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: jacocoExclude)
		}))
	}
}

sonar {
	properties {
		property "sonar.projectKey", "GerarC_SecureCheck-Back"
		property "sonar.organization", "gerarc"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}